# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the generator README.md for more information:
# https://github.com/ksss/aws-sdk-rbs-generator/blob/main/README.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module RDS
    class Resource
      def initialize: (?client: Client) -> void
      def client: () -> Client

      # actions

      def create_db_cluster: (?availability_zones: Types::availability_zones, ?backup_retention_period: Types::integer_optional, ?character_set_name: Types::string, ?database_name: Types::string, db_cluster_identifier: Types::string, ?db_cluster_parameter_group_name: Types::string, ?vpc_security_group_ids: Types::vpc_security_group_id_list, ?db_subnet_group_name: Types::string, engine: Types::string, ?engine_version: Types::string, ?port: Types::integer_optional, ?master_username: Types::string, ?master_user_password: Types::string, ?option_group_name: Types::string, ?preferred_backup_window: Types::string, ?preferred_maintenance_window: Types::string, ?replication_source_identifier: Types::string, ?tags: Types::tag_list_input, ?storage_encrypted: Types::boolean_optional, ?kms_key_id: Types::string, ?pre_signed_url: Types::string, ?enable_iam_database_authentication: Types::boolean_optional, ?backtrack_window: Types::long_optional, ?enable_cloudwatch_logs_exports: Types::log_type_list, ?engine_mode: Types::string, ?scaling_configuration: Types::scaling_configuration, ?deletion_protection: Types::boolean_optional, ?global_cluster_identifier: Types::string, ?enable_http_endpoint: Types::boolean_optional, ?copy_tags_to_snapshot: Types::boolean_optional, ?domain: Types::string, ?domain_iam_role_name: Types::string, ?enable_global_write_forwarding: Types::boolean_optional, ?db_cluster_instance_class: Types::string, ?allocated_storage: Types::integer_optional, ?storage_type: Types::string, ?iops: Types::integer_optional, ?publicly_accessible: Types::boolean_optional, ?auto_minor_version_upgrade: Types::boolean_optional, ?monitoring_interval: Types::integer_optional, ?monitoring_role_arn: Types::string, ?enable_performance_insights: Types::boolean_optional, ?performance_insights_kms_key_id: Types::string, ?performance_insights_retention_period: Types::integer_optional) -> DBCluster
      def create_db_cluster_parameter_group: (db_cluster_parameter_group_name: Types::string, db_parameter_group_family: Types::string, description: Types::string, ?tags: Types::tag_list_input) -> DBClusterParameterGroup
      def create_db_instance: (?db_name: Types::string, db_instance_identifier: Types::string, ?allocated_storage: Types::integer_optional, db_instance_class: Types::string, engine: Types::string, ?master_username: Types::string, ?master_user_password: Types::string, ?db_security_groups: Types::db_security_group_name_list, ?vpc_security_group_ids: Types::vpc_security_group_id_list, ?availability_zone: Types::string, ?db_subnet_group_name: Types::string, ?preferred_maintenance_window: Types::string, ?db_parameter_group_name: Types::string, ?backup_retention_period: Types::integer_optional, ?preferred_backup_window: Types::string, ?port: Types::integer_optional, ?multi_az: Types::boolean_optional, ?engine_version: Types::string, ?auto_minor_version_upgrade: Types::boolean_optional, ?license_model: Types::string, ?iops: Types::integer_optional, ?option_group_name: Types::string, ?character_set_name: Types::string, ?nchar_character_set_name: Types::string, ?publicly_accessible: Types::boolean_optional, ?tags: Types::tag_list_input, ?db_cluster_identifier: Types::string, ?storage_type: Types::string, ?tde_credential_arn: Types::string, ?tde_credential_password: Types::string, ?storage_encrypted: Types::boolean_optional, ?kms_key_id: Types::string, ?domain: Types::string, ?copy_tags_to_snapshot: Types::boolean_optional, ?monitoring_interval: Types::integer_optional, ?monitoring_role_arn: Types::string, ?domain_iam_role_name: Types::string, ?promotion_tier: Types::integer_optional, ?timezone: Types::string, ?enable_iam_database_authentication: Types::boolean_optional, ?enable_performance_insights: Types::boolean_optional, ?performance_insights_kms_key_id: Types::string, ?performance_insights_retention_period: Types::integer_optional, ?enable_cloudwatch_logs_exports: Types::log_type_list, ?processor_features: Types::processor_feature_list_input, ?deletion_protection: Types::boolean_optional, ?max_allocated_storage: Types::integer_optional, ?enable_customer_owned_ip: Types::boolean_optional, ?custom_iam_instance_profile: Types::string, ?backup_target: Types::string) -> DBInstance
      def create_db_parameter_group: (db_parameter_group_name: Types::string, db_parameter_group_family: Types::string, description: Types::string, ?tags: Types::tag_list_input) -> DBParameterGroup
      def create_db_security_group: (db_security_group_name: Types::string, db_security_group_description: Types::string, ?tags: Types::tag_list_input) -> DBSecurityGroup
      def create_db_subnet_group: (db_subnet_group_name: Types::string, db_subnet_group_description: Types::string, subnet_ids: Types::subnet_identifier_list, ?tags: Types::tag_list_input) -> DBSubnetGroup
      def create_event_subscription: (subscription_name: Types::string, sns_topic_arn: Types::string, ?source_type: Types::string, ?event_categories: Types::event_categories_list, ?source_ids: Types::source_ids_list, ?enabled: Types::boolean_optional, ?tags: Types::tag_list_input) -> EventSubscription
      def create_option_group: (option_group_name: Types::string, engine_name: Types::string, major_engine_version: Types::string, option_group_description: Types::string, ?tags: Types::tag_list_input) -> OptionGroup

      # associations

      def account_quotas: () -> AccountQuota::Collection
      def certificate: (String id) -> Certificate
      def certificates: (?certificate_identifier: Types::string, ?filters: Types::filter_list, ?max_records: Types::integer_optional, ?marker: Types::string) -> Certificate::Collection
      def db_cluster: (String id) -> DBCluster
      def db_cluster_parameter_group: (String name) -> DBClusterParameterGroup
      def db_cluster_parameter_groups: (?db_cluster_parameter_group_name: Types::string, ?filters: Types::filter_list, ?max_records: Types::integer_optional, ?marker: Types::string) -> DBClusterParameterGroup::Collection
      def db_clusters: (?db_cluster_identifier: Types::string, ?filters: Types::filter_list, ?max_records: Types::integer_optional, ?marker: Types::string, ?include_shared: Types::boolean) -> DBCluster::Collection
      def db_engine: (String name) -> DBEngine
      def db_engine_version: (String engine_name, String version) -> DBEngineVersion
      def db_engine_versions: (?engine: Types::string, ?engine_version: Types::string, ?db_parameter_group_family: Types::string, ?filters: Types::filter_list, ?max_records: Types::integer_optional, ?marker: Types::string, ?default_only: Types::boolean, ?list_supported_character_sets: Types::boolean_optional, ?list_supported_timezones: Types::boolean_optional, ?include_all: Types::boolean_optional) -> DBEngineVersion::Collection
      def db_instance: (String id) -> DBInstance
      def db_instances: (?db_instance_identifier: Types::string, ?filters: Types::filter_list, ?max_records: Types::integer_optional, ?marker: Types::string) -> DBInstance::Collection
      def db_parameter_group: (String name) -> DBParameterGroup
      def db_parameter_group_family: (String name) -> DBParameterGroupFamily
      def db_parameter_groups: (?db_parameter_group_name: Types::string, ?filters: Types::filter_list, ?max_records: Types::integer_optional, ?marker: Types::string) -> DBParameterGroup::Collection
      def db_security_group: (String name) -> DBSecurityGroup
      def db_security_groups: (?db_security_group_name: Types::string, ?filters: Types::filter_list, ?max_records: Types::integer_optional, ?marker: Types::string) -> DBSecurityGroup::Collection
      def db_snapshots: (?db_instance_identifier: Types::string, ?db_snapshot_identifier: Types::string, ?snapshot_type: Types::string, ?filters: Types::filter_list, ?max_records: Types::integer_optional, ?marker: Types::string, ?include_shared: Types::boolean, ?include_public: Types::boolean, ?dbi_resource_id: Types::string) -> DBSnapshot::Collection
      def db_subnet_group: (String name) -> DBSubnetGroup
      def db_subnet_groups: (?db_subnet_group_name: Types::string, ?filters: Types::filter_list, ?max_records: Types::integer_optional, ?marker: Types::string) -> DBSubnetGroup::Collection
      def event_category_map: (String source_type) -> EventCategoryMap
      def event_category_maps: (?source_type: Types::string, ?filters: Types::filter_list) -> EventCategoryMap::Collection
      def event_subscription: (String name) -> EventSubscription
      def event_subscriptions: (?subscription_name: Types::string, ?filters: Types::filter_list, ?max_records: Types::integer_optional, ?marker: Types::string) -> EventSubscription::Collection
      def events: (?source_identifier: Types::string, ?source_type: Types::source_type, ?start_time: Types::t_stamp, ?end_time: Types::t_stamp, ?duration: Types::integer_optional, ?event_categories: Types::event_categories_list, ?filters: Types::filter_list, ?max_records: Types::integer_optional, ?marker: Types::string) -> Event::Collection
      def option_group: (String name) -> OptionGroup
      def option_groups: (?option_group_name: Types::string, ?filters: Types::filter_list, ?marker: Types::string, ?max_records: Types::integer_optional, ?engine_name: Types::string, ?major_engine_version: Types::string) -> OptionGroup::Collection
      def pending_maintenance_action: (String target_arn, String name) -> PendingMaintenanceAction
      def reserved_db_instance: (String id) -> ReservedDBInstance
      def reserved_db_instances: (?reserved_db_instance_id: Types::string, ?reserved_db_instances_offering_id: Types::string, ?db_instance_class: Types::string, ?duration: Types::string, ?product_description: Types::string, ?offering_type: Types::string, ?multi_az: Types::boolean_optional, ?lease_id: Types::string, ?filters: Types::filter_list, ?max_records: Types::integer_optional, ?marker: Types::string) -> ReservedDBInstance::Collection
      def reserved_db_instances_offering: (String id) -> ReservedDBInstancesOffering
      def reserved_db_instances_offerings: (?reserved_db_instances_offering_id: Types::string, ?db_instance_class: Types::string, ?duration: Types::string, ?product_description: Types::string, ?offering_type: Types::string, ?multi_az: Types::boolean_optional, ?filters: Types::filter_list, ?max_records: Types::integer_optional, ?marker: Types::string) -> ReservedDBInstancesOffering::Collection
      def resource_with_pending_maintenance_actions: (String arn) -> ResourcePendingMaintenanceActionList
      def resources_with_pending_maintenance_actions: (?resource_identifier: Types::string, ?filters: Types::filter_list, ?marker: Types::string, ?max_records: Types::integer_optional) -> ResourcePendingMaintenanceActionList::Collection
    end
  end
end

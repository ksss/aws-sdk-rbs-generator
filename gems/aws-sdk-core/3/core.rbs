module Aws
  class EmptyStructure
  end

  module Resources
    class Collection[T]
      include Enumerable[T]
      def initialize: (Enumerable[Enumerable[T]] batches, ?size: Integer, ?limit: Integer) -> void
      def each: () -> Enumerator[T, untyped]
              | () { (T) -> untyped } -> Enumerator[T, untyped]
      def size: () -> Integer?
      alias length size
      def first: () -> T?
               | (Integer) -> self
      def limit: (Integer) -> self
    end
  end

  module Errors
    # The base class for all errors returned by an Amazon Web Service.
    # All ~400 level client errors and ~500 level server errors are raised
    # as service errors.  This indicates it was an error returned from the
    # service and not one generated by the client.
    class ServiceError < RuntimeError
      attr_reader code: String
      attr_reader context: untyped
      attr_reader data: untyped
      attr_accessor self.code: String
    end
  end

  module Waiters
    class Poller
    end
    type options = { max_attempts: Integer?, delay: Integer?, before_attempt: Proc?, before_wait: Proc?, poller: Poller? }
  end
end

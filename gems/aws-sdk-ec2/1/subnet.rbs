# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the generator README.md for more information:
# https://github.com/ksss/aws-sdk-rbs-generator/blob/main/README.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module EC2
    class Subnet
      # identifiers

      def initialize: (id: String, client: Client) -> void
      def id: () -> String

      # data_attribute

      def availability_zone: () -> Types::string
      def availability_zone_id: () -> Types::string
      def available_ip_address_count: () -> Types::integer
      def cidr_block: () -> Types::string
      def default_for_az: () -> Types::boolean
      def enable_lni_at_device_index: () -> Types::integer
      def map_public_ip_on_launch: () -> Types::boolean
      def map_customer_owned_ip_on_launch: () -> Types::boolean
      def customer_owned_ipv_4_pool: () -> Types::coip_pool_id
      def state: () -> Types::subnet_state
      def vpc_id: () -> Types::string
      def owner_id: () -> Types::string
      def assign_ipv_6_address_on_creation: () -> Types::boolean
      def ipv_6_cidr_block_association_set: () -> Types::subnet_ipv_6_cidr_block_association_set_output
      def tags: () -> Types::tag_list_output
      def subnet_arn: () -> Types::string
      def outpost_arn: () -> Types::string
      def enable_dns_64: () -> Types::boolean
      def ipv_6_native: () -> Types::boolean
      def private_dns_name_options_on_launch: () -> Types::PrivateDnsNameOptionsOnLaunch

      # client_method

      def client: () -> Client

      # load_method

      def load: () -> self
      alias reload load

      # data_method

      def data: () -> Types::Subnet

      def data_loaded?: () -> bool

      # waiters


      # actions

      def create_instances: (?block_device_mappings: Types::block_device_mapping_request_list_input, ?image_id: Types::image_id, ?instance_type: Types::instance_type, ?ipv_6_address_count: Types::integer, ?ipv_6_addresses: Types::instance_ipv_6_address_list_input, ?kernel_id: Types::kernel_id, ?key_name: Types::key_pair_name, max_count: Types::integer, min_count: Types::integer, ?monitoring: Types::run_instances_monitoring_enabled, ?placement: Types::placement, ?ramdisk_id: Types::ramdisk_id, ?security_group_ids: Types::security_group_id_string_list, ?security_groups: Types::security_group_string_list, ?user_data: Types::string, ?additional_info: Types::string, ?client_token: Types::string, ?disable_api_termination: Types::boolean, ?dry_run: Types::boolean, ?ebs_optimized: Types::boolean, ?iam_instance_profile: Types::iam_instance_profile_specification, ?instance_initiated_shutdown_behavior: Types::shutdown_behavior, ?network_interfaces: Types::instance_network_interface_specification_list_input, ?private_ip_address: Types::string, ?elastic_gpu_specification: Types::elastic_gpu_specifications_input, ?elastic_inference_accelerators: Types::elastic_inference_accelerators, ?tag_specifications: Types::tag_specification_list_input, ?launch_template: Types::launch_template_specification, ?instance_market_options: Types::instance_market_options_request, ?credit_specification: Types::credit_specification_request, ?cpu_options: Types::cpu_options_request, ?capacity_reservation_specification: Types::capacity_reservation_specification, ?hibernation_options: Types::hibernation_options_request, ?license_specifications: Types::license_specification_list_request, ?metadata_options: Types::instance_metadata_options_request, ?enclave_options: Types::enclave_options_request, ?private_dns_name_options: Types::private_dns_name_options_request) -> Instance::Collection
      def create_network_interface: (?description: Types::string, ?dry_run: Types::boolean, ?groups: Types::security_group_id_string_list, ?ipv_6_address_count: Types::integer, ?ipv_6_addresses: Types::instance_ipv_6_address_list_input, ?private_ip_address: Types::string, ?private_ip_addresses: Types::private_ip_address_specification_list_input, ?secondary_private_ip_address_count: Types::integer, ?ipv_4_prefixes: Types::ipv_4_prefix_list_input, ?ipv_4_prefix_count: Types::integer, ?ipv_6_prefixes: Types::ipv_6_prefix_list_input, ?ipv_6_prefix_count: Types::integer, ?interface_type: Types::network_interface_creation_type, ?tag_specifications: Types::tag_specification_list_input, ?client_token: Types::string) -> NetworkInterface
      def create_tags: (?dry_run: Types::boolean, tags: Types::tag_list_input) -> Tag::Collection
      def delete_tags: (?dry_run: Types::boolean, ?tags: Types::tag_list_input) -> Tag::Collection
      def delete: (?dry_run: Types::boolean) -> EmptyStructure

      # associations

      def instances: (?filters: Types::filter_list, ?instance_ids: Types::instance_id_string_list, ?dry_run: Types::boolean, ?max_results: Types::integer, ?next_token: Types::string) -> Instance::Collection
      def nat_gateways: (?dry_run: Types::boolean, ?filter: Types::filter_list, ?max_results: Types::describe_nat_gateways_max_results, ?nat_gateway_ids: Types::nat_gateway_id_string_list, ?next_token: Types::string) -> NatGateway::Collection
      def network_interfaces: (?filters: Types::filter_list, ?dry_run: Types::boolean, ?network_interface_ids: Types::network_interface_id_list, ?next_token: Types::string, ?max_results: Types::describe_network_interfaces_max_results) -> NetworkInterface::Collection
      def vpc: () -> Vpc?

      # batch_actions

      class Collection < ::Aws::Resources::Collection[Subnet]
      end
    end
  end
end
